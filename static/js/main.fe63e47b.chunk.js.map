{"version":3,"sources":["components/NavBar.js","components/TextForm.jsx","components/Alert.js","components/About.jsx","components/ContactUS.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","Mode","style","backgroundColor","color","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toogleMode","role","htmlFor","TextForm","useState","text","setText","error","setError","placeholder","rows","onChange","event","target","value","onError","lowerText","toLowerCase","showAlert","toUpperCase","cnt","split","length","out","charAt","slice","Alert","alert","classNam","word","low","capatialise","message","width","height","About","my-3","ContactUS","mx-10","App","drkMode","setDrkMode","setAlert","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe63e47b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <>\r\n     <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`} style= {\r\n        {backgroundColor : props.Mode === 'light' ? 'dark' : 'light',\r\n        color:props.Mode === 'light' ? 'black' : 'white',\r\n}\r\n      }>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">TextAction</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/contactus\">Contact Us</Link>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.Mode === 'light' ? 'dark' : 'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toogleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Set Dark Mode Here</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n    </>\r\n  );\r\n}\r\n","import {React,useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\nconst changeToLower = () => {\r\n    try {\r\n      var lowerText = text.toLowerCase();\r\n    setText(lowerText);\r\n    props.showAlert(\"Converted to Lower Case\",\"success\");\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n}\r\nconst changeToUpper = () => {\r\n try {\r\n  var lowerText = text.toUpperCase();\r\n  setText(lowerText);\r\n  props.showAlert(\"Converted to Upper Case\",\"success\");\r\n } catch (error) {\r\n   setError(error);\r\n }\r\n}\r\nconst countWords = () => {\r\n  try {\r\n    var cnt = text.split(\" \").length;\r\n    setText(cnt);\r\n    props.showAlert(\"Words Counted\",\"success\");\r\n  } catch (error) {\r\n    setError(error);\r\n  }\r\n}\r\nconst capitalText = () => {\r\n   try {\r\n    var out = text.charAt(0).toUpperCase()+text.slice(1);\r\n    setText(out);\r\n    props.showAlert(\"Input Capitalized\",\"success\");\r\n   } catch (error) {\r\n     setError(error);\r\n   }\r\n}\r\nconst onTextChange= (event) =>{\r\n    setText(event.target.value);\r\n}\r\nconst [text, setText] = useState('');\r\nconst [error, setError] = useState(null);\r\n    return (\r\n        <>\r\n     \r\n      <div className=\"container\"  >\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Enter Text to Perform Buttoned Actions</label>\r\n        <textarea className=\"form-control\" placeholder=\"Enter your input here:-\" id=\"exampleFormControlTextarea1\" rows=\"5\" onChange={onTextChange} onError={error} value={text} style= {\r\n        {\r\n            backgroundColor : props.Mode === 'dark' ? 'grey' : 'white',\r\n        color:props.Mode === 'dark' ? 'white' : 'black',\r\n}\r\n      }></textarea>\r\n        <button type=\"button\" className=\"btn btn-primary my-2\"  onClick={changeToLower}>Change to LowerCase</button>\r\n        <button type=\"button\" className=\"btn btn-secondary mx-3 my-2\" onClick={changeToUpper}>Change to UpperCase</button>\r\n        <button type=\"button\" className=\"btn btn-success my-2\" onClick={countWords}>Count Words</button>\r\n        <button type=\"button\" className=\"btn btn-danger mx-3 my-2 \" onClick= {capitalText}>Capital Case</button>\r\n        \r\n      </div>\r\n\r\n      <div className=\"container\" style= {\r\n        {//backgroundColor : props.Mode === 'light' ? 'grey' : 'light',\r\n        color:props.Mode === 'light' ? 'black' : 'white',\r\n}\r\n      }>\r\n            <h2>Number of characters in your input are:</h2>\r\n            <h1>{text.length}</h1>\r\n          <h3>\r\n              Preview of the entered Text is available here:\r\n          </h3><br></br>\r\n            <p>{text}</p>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatialise = (word) => {\r\n        const low = word.toLowerCase();\r\n        return low.charAt(0).toUpperCase() + low.slice(1);\r\n    }\r\n    return (\r\n       props.alert &&  <div classNam={`alert alert-${props.alert.type} d-flex align-items-center`} role=\"alert\">\r\n          <strong>{capatialise(props.alert.type)}</strong> : {props.alert.message}\r\n  <svg className=\"bi flex-shrink-0 me-2\" width=\"24\" height=\"24\" role=\"img\" aria-label=\"Success:\"></svg>\r\n\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nfunction About(props) {\r\n  return (\r\n    <div className=\"container\" style= {{ backgroundColor : props.Mode === 'dark' ? 'grey' : 'white',     color:props.Mode === 'dark' ? 'white' : 'black',} } my-3>\r\n      <h1 >It is simply a set of utility functions to do operations on String objects. In fact, the whole class doesn't have any instance fields or methods. Everything is static.\r\n           Consider it like a container to group functions with a text-based semantic </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { FaPhoneAlt } from \"react-icons/fa\";\r\nimport { HiMail } from \"react-icons/hi\";\r\nimport \"../App.css\";\r\nfunction ContactUS(props) {\r\n    return (\r\n        <div className=\"container center flex-auto\" id=\"contact\" mx-10 style= {{ backgroundColor : props.Mode === 'dark' ? 'grey' : 'white',     color:props.Mode === 'dark' ? 'white' : 'black',} } my-3>\r\n          <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><h1 > < FaPhoneAlt />  {\"   \"}   +918168481271 </h1> <br></br><br></br>\r\n          <h2><HiMail /> {\"                                   \"} rajeshsinghkadyan@gmail.com</h2>\r\n        </div>\r\n      )\r\n    }\r\n \r\nexport default ContactUS\r\n","\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\nimport About from './components/About';\nimport ContactUS from './components/ContactUS';\n\n\nfunction App() {\n  \n  const [drkMode,setDrkMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  \n\n  const showAlert = (message,type) =>{\n    setAlert({\n      message: message,\n      type : type\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toogleMode = () =>{\n    if(drkMode === 'light')\n    {\n      setDrkMode('dark');\n      document.body.style.backgroundColor=\"grey\";\n      showAlert(\"Dark Mode is enabled\",\"success\");\n    }\n    else{\n      setDrkMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light Mode is enabled\",\"success\");\n    }\n  }\n  \n  return (\n\n   <>\n\n  <Router>\n  <NavBar Mode={drkMode} toogleMode={toogleMode}/>\n  <Alert alert={alert} />\n  <Switch>\n    <Route exact path=\"/about\">\n      <About Mode={drkMode} />\n    </Route>\n    <Route exact path=\"/\">  <TextForm showAlert = {showAlert(alert)} Mode={drkMode}/></Route>\n    <Route exact path=\"/contactus\"><ContactUS Mode={drkMode} /> </Route>\n  </Switch>\n  </Router>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}